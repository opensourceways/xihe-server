// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/aiccfinetune/{model}": {
            "get": {
                "description": "get AICC finetunes",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AICC Finetune"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.AICCFinetuneSummaryDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            },
            "post": {
                "description": "create aicc finetune",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AICC Finetune"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "model name",
                        "name": "model",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of creating aicc finetune",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.aiccFinetuneCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.aiccFinetuneCreateResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_body"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/aiccfinetune/{model}/ws": {
            "get": {
                "description": "get AICC Finetunes",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AICC Finetune"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.AICCFinetuneSummaryDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/aiccfinetune/{model}/{id}": {
            "get": {
                "description": "get AICC finetune info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AICC Finetune"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "model name",
                        "name": "model",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "finetune id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.aiccFinetuneDetail"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            },
            "put": {
                "description": "terminate AICC Finetune",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AICC Finetune"
                ],
                "summary": "Terminate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "model name",
                        "name": "model",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "finetune id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete AICC Finetune",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AICC Finetune"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "model name",
                        "name": "model",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "finetune id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/aiccfinetune/{model}/{id}/result/{type}": {
            "get": {
                "description": "get log url of AICC Finetune for downloading",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AICC Finetune"
                ],
                "summary": "GetLog",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "finetune id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "aicc finetune result: log, output",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.aiccFinetuneLogResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/aiccfinetune/{model}/{task}/data": {
            "post": {
                "description": "Upload Data",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "AICC Finetune"
                ],
                "summary": "UploadData",
                "parameters": [
                    {
                        "type": "string",
                        "description": "model name",
                        "name": "model",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "result file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/app.UploadDataDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/ai_detector": {
            "post": {
                "description": "detect if text generate by ai",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "parameters": [
                    {
                        "description": "body of ai detector",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.aiDetectorReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/controller.aiDetectorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/api/apply/{model}": {
            "get": {
                "description": "is user applied for api",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.isApplyResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            },
            "post": {
                "description": "generates pictures by WuKong-hf",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "parameters": [
                    {
                        "description": "body of wukong",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.applyApiReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.newApiTokenResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/api/get/": {
            "get": {
                "description": "get user apply record",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.ApiApplyRecordDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/api/refresh/{model}": {
            "get": {
                "description": "refresh api token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.newApiTokenResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/api/{model}": {
            "post": {
                "description": "generates pictures by WuKong",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "parameters": [
                    {
                        "description": "body of wukong",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.wukongRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.wukongPicturesGenerateResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/apiinfo/get/{model}": {
            "get": {
                "description": "get api info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.ApiInfoDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/baichuan2_7b_chat": {
            "post": {
                "description": "conversational AI",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "parameters": [
                    {
                        "description": "body of baichuan",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.baichuanReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/app.BaiChuanDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/glm2_6b": {
            "post": {
                "description": "conversational AI",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "parameters": [
                    {
                        "description": "body of glm2",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.glm2Request"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/iflytekspark": {
            "post": {
                "description": "conversational AI",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "parameters": [
                    {
                        "description": "body of iflytekspark",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.iflyteksparkRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/llama2_7b": {
            "post": {
                "description": "conversational AI",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "parameters": [
                    {
                        "description": "body of llama2",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.llama2Request"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/luojia": {
            "get": {
                "description": "list luo-jia big model records",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opensourceways_xihe-server_bigmodel_app.LuoJiaRecordDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            },
            "post": {
                "description": "luo-jia big model",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.luojiaResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/luojia_upload_picture": {
            "post": {
                "description": "upload a picture for luo-jia",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "parameters": [
                    {
                        "type": "file",
                        "description": "picture",
                        "name": "picture",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.pictureUploadResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/skywork_13b": {
            "post": {
                "description": "conversational AI",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "parameters": [
                    {
                        "description": "body of skywork",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.skyWorkRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/wukong": {
            "get": {
                "description": "list wukong pictures user liked",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opensourceways_xihe-server_bigmodel_app.WuKongLikeDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            },
            "post": {
                "description": "generates pictures by WuKong",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "parameters": [
                    {
                        "description": "body of wukong",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.wukongRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.wukongPicturesGenerateResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/wukong/digg": {
            "post": {
                "description": "add digg to wukong picture",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/controller.wukongDiggResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete digg to wukong picture",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "parameters": [
                    {
                        "description": "body of wukong",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.wukongCancelDiggPublicRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/controller.wukongDiggResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/wukong/like": {
            "post": {
                "description": "add like to wukong picture",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/controller.wukongAddLikeResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/wukong/like/{id}": {
            "delete": {
                "description": "cancel like on wukong picture",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "picture id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/wukong/link": {
            "put": {
                "description": "generate download url of wukong picture",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "parameters": [
                    {
                        "description": "body of wukong",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.wukongPictureLink"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/controller.wukongPictureLink"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/wukong/public": {
            "get": {
                "description": "list wukong pictures user publiced",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opensourceways_xihe-server_bigmodel_app.WuKongPublicDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            },
            "post": {
                "description": "add public to wukong picture",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/controller.wukongAddPublicResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/wukong/public/{id}": {
            "delete": {
                "description": "cancel public on wukong picture",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "picture id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/wukong/publics": {
            "get": {
                "description": "list all wukong pictures publiced",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opensourceways_xihe-server_bigmodel_app.WuKongPublicDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/wukong/rank": {
            "get": {
                "description": "get wukong rank",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.WuKongRankDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/wukong/samples/{batch}": {
            "get": {
                "description": "gen wukong samples",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "batch num",
                        "name": "batch",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/wukong/task": {
            "get": {
                "description": "get last finished task",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.WuKongRankDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/bigmodel/wukong_async": {
            "post": {
                "description": "send async wukong request task",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "BigModel"
                ],
                "parameters": [
                    {
                        "description": "body of wukong",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.wukongRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.wukongPicturesGenerateResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/challenge": {
            "get": {
                "description": "get detail of challenge",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Challenge"
                ],
                "summary": "Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.ChallengeCompetitorInfoDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/challenge/aiquestions": {
            "get": {
                "description": "get ai questions",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Challenge"
                ],
                "summary": "GetAIQuestions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.AIQuestionDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            },
            "post": {
                "description": "submit answer of ai question",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Challenge"
                ],
                "summary": "Submit",
                "parameters": [
                    {
                        "description": "body of ai question answer",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.aiQuestionAnswerSubmitRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.aiQuestionAnswerSubmitResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/challenge/competitor": {
            "post": {
                "description": "apply the challenge",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Challenge"
                ],
                "summary": "Apply",
                "parameters": [
                    {
                        "description": "body of applying",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.competitorApplyRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/challenge/ranking": {
            "get": {
                "description": "get ranking list of challenge",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Challenge"
                ],
                "summary": "GetRankingList",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.ChallengeRankingDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/cloud": {
            "get": {
                "description": "list cloud config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cloud"
                ],
                "summary": "List",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/app.CloudDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/cloud/pod/{id}": {
            "get": {
                "description": "WsSendReleasedPod is a websocket api which sends a released pod data to client.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cloud"
                ],
                "summary": "WsSendReleasedPod",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.PodInfoDTO"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "system error",
                        "schema": {
                            "$ref": "#/definitions/controller.responseData"
                        }
                    }
                }
            },
            "delete": {
                "description": "release cloud resource",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cloud"
                ],
                "summary": "Release",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pod id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "system error",
                        "schema": {
                            "$ref": "#/definitions/controller.responseData"
                        }
                    }
                }
            }
        },
        "/v1/cloud/read/{owner}": {
            "get": {
                "description": "get cloud pod",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cloud"
                ],
                "summary": "CanRead",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user name",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/app.InferenceDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/cloud/subscribe": {
            "post": {
                "description": "subscribe cloud",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cloud"
                ],
                "summary": "Subscribe",
                "parameters": [
                    {
                        "description": "body of subscribe cloud",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.cloudSubscribeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/cloud/{cid}": {
            "get": {
                "description": "get cloud pod",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cloud"
                ],
                "summary": "GetHttp",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cloud config id",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/app.InferenceDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/competition": {
            "get": {
                "description": "list competitions",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "competition status, such as over, preparing, in-progress",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "just list competitions of competitor, if it is set",
                        "name": "mine",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opensourceways_xihe-server_competition_app.CompetitionSummaryDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/competition/reginfo": {
            "get": {
                "description": "get register info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "GetRegisterInfo",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.UserRegisterInfoDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/competition/{id}": {
            "get": {
                "description": "get detail of competition",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "competition id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opensourceways_xihe-server_competition_app.UserCompetitionDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/competition/{id}/competitor": {
            "post": {
                "description": "apply the competition",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "Apply",
                "parameters": [
                    {
                        "type": "string",
                        "description": "competition id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of applying",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.CompetitorApplyRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/competition/{id}/ranking": {
            "get": {
                "description": "get ranking list of competition",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "GetRankingList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "competition id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.CompetitionRankingDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/competition/{id}/related_project": {
            "put": {
                "description": "add related project",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "AddRelatedProject",
                "parameters": [
                    {
                        "type": "string",
                        "description": "competition id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "project info",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.AddRelatedProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/competition/{id}/submissions": {
            "get": {
                "description": "get submissions",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "GetSubmissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "competition id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opensourceways_xihe-server_competition_app.CompetitionSubmissionsDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            },
            "post": {
                "description": "submit",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "Submit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "competition id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "result file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_opensourceways_xihe-server_competition_app.CompetitionSubmissionDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/competition/{id}/team": {
            "get": {
                "description": "get team of competition",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "GetMyTeam",
                "parameters": [
                    {
                        "type": "string",
                        "description": "competition id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_opensourceways_xihe-server_competition_app.CompetitionTeamDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            },
            "put": {
                "description": "join a team of competition",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "JoinTeam",
                "parameters": [
                    {
                        "type": "string",
                        "description": "competition id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of joining team",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.JoinTeamRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            },
            "post": {
                "description": "create team of competition",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "CreateTeam",
                "parameters": [
                    {
                        "type": "string",
                        "description": "competition id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of creating team",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.CreateTeamRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/competition/{id}/team/action/change_name": {
            "put": {
                "description": "change name of a team",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "ChangeName",
                "parameters": [
                    {
                        "type": "string",
                        "description": "competition id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of team name",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.ChangeTeamNameRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/competition/{id}/team/action/delete_member": {
            "put": {
                "description": "delete member of a team",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "DeleteMember",
                "parameters": [
                    {
                        "type": "string",
                        "description": "competition id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of delete member",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.DeleteMemberRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/competition/{id}/team/action/dissolve": {
            "put": {
                "description": "dissolve a team",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "Dissolve",
                "parameters": [
                    {
                        "type": "string",
                        "description": "competition id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/competition/{id}/team/action/quit": {
            "put": {
                "description": "quit team",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "QuitTeam",
                "parameters": [
                    {
                        "type": "string",
                        "description": "competition id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/competition/{id}/team/action/transfer_leader": {
            "put": {
                "description": "transfer leader to a member",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Competition"
                ],
                "summary": "TransferLeader",
                "parameters": [
                    {
                        "type": "string",
                        "description": "competition id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of member",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.TransferLeaderRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/course": {
            "get": {
                "description": "list the course",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course status, such as over, preparing, in-progress",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "course type, such as ai, mindspore, foundation",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "just list courses of player, if it is set",
                        "name": "mine",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.CourseSummaryDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/course/:id/asg/:asgid": {
            "get": {
                "description": "Get assignment",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "GetAssignment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "asg id",
                        "name": "asgid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.AsgDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/course/reginfo": {
            "get": {
                "description": "get register info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "GetRegisterInfo",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.UserRegisterInfoDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/course/{id}": {
            "get": {
                "description": "get course information",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.CourseDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/course/{id}/asg/list": {
            "get": {
                "description": "list assignments",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "ListAssignments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "assignments status, such as finish",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.AsgWorkDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/course/{id}/asg/result": {
            "get": {
                "description": "get submissions",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "GetSubmissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.RelateProjectDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/course/{id}/cert": {
            "get": {
                "description": "get certification",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "GetCertification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.CertInfoDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/course/{id}/player": {
            "post": {
                "description": "apply the course",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Apply",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of applying",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.StudentApplyRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/course/{id}/related_project": {
            "put": {
                "description": "add related project",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "AddCourseRelatedProject",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "project info",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.AddCourseRelatedProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/course/{id}/related_project": {
            "put": {
                "description": "add related project",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "AddCourseRelatedProject",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "record info",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.PlayRecordRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/course/{id}/related_project": {
            "put": {
                "description": "add related project",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "AddCourseRelatedProject",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "project info",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.AddCourseRelatedProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/dataset": {
            "get": {
                "description": "list global public dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "ListGlobal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of dataset",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tags, separate multiple tags with commas",
                        "name": "tags",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tag kinds, separate multiple kinds with commas",
                        "name": "tag_kinds",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "dataset level, such as official, good",
                        "name": "level",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "count_per_page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page num which starts from 1",
                        "name": "page_num",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort keys, value can be update_time, first_letter, download_count",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.GlobalDatasetsDTO"
                        }
                    }
                }
            },
            "post": {
                "description": "create dataset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "description": "body of creating dataset",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.datasetCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/app.DatasetDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "duplicate_creating"
                        }
                    }
                }
            }
        },
        "/v1/dataset/{owner}": {
            "get": {
                "description": "list dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of dataset",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of dataset",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "repo type of dataset, value can be public or private",
                        "name": "repo_type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "count_per_page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page num which starts from 1",
                        "name": "page_num",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort keys, value can be update_time, first_letter, download_count",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.datasetsInfo"
                        }
                    }
                }
            }
        },
        "/v1/dataset/{owner}/{id}": {
            "put": {
                "description": "update property of dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of dataset",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of updating dataset",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.datasetUpdateRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/dataset/{owner}/{id}/tags": {
            "put": {
                "description": "set tags for dataset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "SetTags",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of dataset",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id of dataset",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of tags",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.resourceTagsUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    }
                }
            }
        },
        "/v1/dataset/{owner}/{name}": {
            "get": {
                "description": "get dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of dataset",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of dataset",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.datasetDetail"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of dataset",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of dataset",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/dataset/{owner}/{name}/check": {
            "get": {
                "description": "check whether the name can be applied to create a new dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Check",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of dataset",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of dataset",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.canApplyResourceNameResp"
                        }
                    }
                }
            }
        },
        "/v1/finetune": {
            "get": {
                "description": "list finetunes",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Finetune"
                ],
                "summary": "List",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.UserFinetunesDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            },
            "post": {
                "description": "create finetune",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Finetune"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "description": "body of creating finetune",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.FinetuneCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.finetuneCreateResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/finetune/ws": {
            "get": {
                "description": "watch finetunes",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Finetune"
                ],
                "summary": "WatchFinetunes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.FinetuneSummaryDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/finetune/{id}": {
            "put": {
                "description": "terminate finetune",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Finetune"
                ],
                "summary": "Terminate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "finetune id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete finetune",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Finetune"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "finetune id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/finetune/{id}/log": {
            "get": {
                "description": "download finetune log",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Finetune"
                ],
                "summary": "Log",
                "parameters": [
                    {
                        "type": "string",
                        "description": "finetune id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.finetuneLog"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/finetune/{id}/log/ws": {
            "get": {
                "description": "watch single finetune",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Finetune"
                ],
                "summary": "WatchSingle",
                "parameters": [
                    {
                        "type": "string",
                        "description": "finetune id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.finetuneLog"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/homepage": {
            "get": {
                "description": "list the courses and competitions",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "HomePage"
                ],
                "summary": "ListAll",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.homeInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/homepage/electricity": {
            "get": {
                "description": "list the project dataset model courses and competitions",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "HomePage"
                ],
                "summary": "ListAllElectricity",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.homeElectricityInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/inference/project/{owner}/{pid}": {
            "get": {
                "description": "create inference",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Inference"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project owner",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/app.InferenceDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_body"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/login": {
            "get": {
                "description": "callback of authentication by authing",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "authing code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "redirect uri",
                        "name": "redirect_uri",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.UserDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "schema": {
                            "type": "duplicate_creating"
                        }
                    }
                }
            }
        },
        "/v1/login/{account}": {
            "get": {
                "description": "get info of login",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account",
                        "name": "account",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.LoginDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "not_allowed"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/model": {
            "get": {
                "description": "list global public model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "ListGlobal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of model",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tags, separate multiple tags with commas",
                        "name": "tags",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tag kinds, separate multiple kinds with commas",
                        "name": "tag_kinds",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "model level, such as official, good",
                        "name": "level",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "count_per_page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page num which starts from 1",
                        "name": "page_num",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort keys, value can be update_time, first_letter, download_count",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.GlobalModelsDTO"
                        }
                    }
                }
            },
            "post": {
                "description": "create model",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "description": "body of creating model",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.modelCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/app.ModelDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "duplicate_creating"
                        }
                    }
                }
            }
        },
        "/v1/model/relation/{owner}/{id}/dataset": {
            "put": {
                "description": "add related dataset to model",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "AddRelatedDataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of model",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id of model",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of related dataset",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.relatedResourceAddRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/app.ResourceDTO"
                        }
                    }
                }
            },
            "delete": {
                "description": "remove related dataset to model",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "RemoveRelatedDataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of model",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id of model",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of related dataset",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.relatedResourceRemoveRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/model/{owner}": {
            "get": {
                "description": "list model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of model",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of model",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "repo type of model, value can be public or private",
                        "name": "repo_type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "count_per_page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page num which starts from 1",
                        "name": "page_num",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort keys, value can be update_time, first_letter, download_count",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.modelsInfo"
                        }
                    }
                }
            }
        },
        "/v1/model/{owner}/{id}": {
            "put": {
                "description": "update property of model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of model",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of updating model",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.modelUpdateRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/model/{owner}/{id}/tags": {
            "put": {
                "description": "set tags for model",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "SetTags",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of model",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id of model",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of tags",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.resourceTagsUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    }
                }
            }
        },
        "/v1/model/{owner}/{name}": {
            "get": {
                "description": "get model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of model",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of model",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.modelDetail"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of model",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of model",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/model/{owner}/{name}/check": {
            "get": {
                "description": "check whether the name can be applied to create a new model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Check",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of model",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of model",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.canApplyResourceNameResp"
                        }
                    }
                }
            }
        },
        "/v1/project": {
            "get": {
                "description": "list global public project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "ListGlobal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of project",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tags, separate multiple tags with commas",
                        "name": "tags",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tag kinds, separate multiple kinds with commas",
                        "name": "tag_kinds",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "project level, such as official, good",
                        "name": "level",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "count_per_page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page num which starts from 1",
                        "name": "page_num",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort keys, value can be update_time, first_letter, download_count",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.GlobalProjectsDTO"
                        }
                    }
                }
            },
            "post": {
                "description": "create project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "description": "body of creating project",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.projectCreateRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/project/relation/{owner}/{id}/dataset": {
            "put": {
                "description": "add related dataset to project",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "AddRelatedDataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of project",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id of project",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of related dataset",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.relatedResourceAddRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/app.ResourceDTO"
                        }
                    }
                }
            },
            "delete": {
                "description": "remove related dataset to project",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "RemoveRelatedDataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of project",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id of project",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of related dataset",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.relatedResourceRemoveRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/project/relation/{owner}/{id}/model": {
            "put": {
                "description": "add related model to project",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "AddRelatedModel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of project",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id of project",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of related model",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.relatedResourceAddRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/app.ResourceDTO"
                        }
                    }
                }
            },
            "delete": {
                "description": "remove related model to project",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "RemoveRelatedModel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of project",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id of project",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of related model",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.relatedResourceRemoveRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/project/{owner}": {
            "get": {
                "description": "list project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of project",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of project",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "repo type of project, value can be public or private",
                        "name": "repo_type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "count_per_page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page num which starts from 1",
                        "name": "page_num",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort keys, value can be update_time, first_letter, download_count",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.projectsInfo"
                        }
                    }
                }
            }
        },
        "/v1/project/{owner}/{id}": {
            "put": {
                "description": "update project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of project",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id of project",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of updating project",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.projectUpdateRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "post": {
                "description": "fork project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Fork",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of forked project",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id of forked project",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of forking project",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.projectForkRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/project/{owner}/{id}/tags": {
            "put": {
                "description": "set tags for project",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "SetTags",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of project",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id of project",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of tags",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.resourceTagsUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    }
                }
            }
        },
        "/v1/project/{owner}/{name}": {
            "get": {
                "description": "get project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of project",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of project",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.projectDetail"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of project",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of project",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/project/{owner}/{name}/check": {
            "get": {
                "description": "check whether the name can be applied to create a new project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Check",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of project",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of project",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.canApplyResourceNameResp"
                        }
                    }
                }
            }
        },
        "/v1/promotion/user/{account}": {
            "get": {
                "description": "get user registrater promotion",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Promotion"
                ],
                "summary": "GetUserRegitration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "account",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/promotion/{id}": {
            "get": {
                "description": "get promotion",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Promotion"
                ],
                "summary": "Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.PromotionDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.responseData"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.responseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.responseData"
                        }
                    }
                }
            }
        },
        "/v1/promotion/{id}/apply": {
            "post": {
                "description": "apply the Promotion",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Promotion"
                ],
                "summary": "Apply",
                "parameters": [
                    {
                        "type": "string",
                        "description": "promotion id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of applying",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.PromotionApplyReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/promotion/{promotion}/points/{account}": {
            "get": {
                "description": "get user points in promotion",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Promotion"
                ],
                "summary": "GetUserPoints",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "account",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/promotion/{promotion}/ranking": {
            "get": {
                "description": "get user points ranking in promotion",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Promotion"
                ],
                "summary": "GetUserRanking",
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/promotions": {
            "get": {
                "description": "list promotions",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Promotion"
                ],
                "summary": "List",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.PromotionsDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.responseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.responseData"
                        }
                    }
                }
            }
        },
        "/v1/repo/{type}/{name}/dir/{path}": {
            "delete": {
                "description": "Delete repo directory",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "RepoFile"
                ],
                "summary": "DeleteDir",
                "parameters": [
                    {
                        "type": "string",
                        "description": "repo name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "repo dir",
                        "name": "path",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/repo/{type}/{name}/file/{path}": {
            "put": {
                "description": "update repo file",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "RepoFile"
                ],
                "summary": "Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "repo name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "repo file path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of updating repo file",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.RepoFileUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_body"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            },
            "post": {
                "description": "create repo file",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "RepoFile"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "repo name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "repo file path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of creating repo file",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.RepoFileCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_body"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete repo file",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "RepoFile"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "repo name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "repo file path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/repo/{type}/{user}/{name}": {
            "get": {
                "description": "Download repo",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "RepoFile"
                ],
                "summary": "DownloadRepo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "repo name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/repo/{type}/{user}/{name}/app": {
            "get": {
                "description": "repo file contain app",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "RepoFile"
                ],
                "summary": "ContainApp",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "repo name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "repo file path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/repo/{type}/{user}/{name}/file/{path}": {
            "get": {
                "description": "Download repo file",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "RepoFile"
                ],
                "summary": "Download",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "repo name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "repo file path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.RepoFileDownloadDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/repo/{type}/{user}/{name}/file/{path}/preview": {
            "get": {
                "description": "preview repo file",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "RepoFile"
                ],
                "summary": "Preview",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "repo name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "repo file path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/repo/{type}/{user}/{name}/files": {
            "get": {
                "description": "list repo file in a path",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "RepoFile"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "repo name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "repo file path",
                        "name": "path",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.RepoPathItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/repo/{type}/{user}/{name}/readme": {
            "get": {
                "description": "repo file contain readme",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "RepoFile"
                ],
                "summary": "ContainReadme",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "repo name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "repo file path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/search": {
            "get": {
                "description": "search resource and user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of resource or user",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.SearchDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/signin": {
            "put": {
                "description": "user sign in",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/tags/{type}": {
            "get": {
                "description": "list tags",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.DomainTagsDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/train/project/{pid}/config": {
            "get": {
                "description": "get user last preset training config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Training"
                ],
                "summary": "GetLastTrainingConfig",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.TrainingConfigDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/train/project/{pid}/training": {
            "get": {
                "description": "get trainings",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Training"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.TrainingSummaryDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            },
            "post": {
                "description": "create training",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Training"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of creating training",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.TrainingCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.trainingCreateResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_body"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/train/project/{pid}/training/ws": {
            "get": {
                "description": "get trainings",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Training"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.TrainingSummaryDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/train/project/{pid}/training/{id}": {
            "get": {
                "description": "get training info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Training"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "training id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.trainingDetail"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            },
            "put": {
                "description": "terminate training",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Training"
                ],
                "summary": "Terminate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "training id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            },
            "post": {
                "description": "recreate training",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Training"
                ],
                "summary": "Recreate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "training id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.trainingCreateResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_body"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete training",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Training"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "training id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/train/project/{pid}/training/{id}/result/{type}": {
            "get": {
                "description": "get log url of training for downloading",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Training"
                ],
                "summary": "GetLog",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "training id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "training result: log, output",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.trainingLogResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/user": {
            "get": {
                "description": "get user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account",
                        "name": "account",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.userDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "resource_not_exists"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/user/activity/{account}": {
            "get": {
                "description": "list activitys",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Activity"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "the account the activities belong to",
                        "name": "account",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.ActivityDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/user/agreement": {
            "put": {
                "description": "update user agreement info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update Agreement",
                "parameters": [
                    {
                        "description": "body of update user agreement",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.UserAgreement"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/user/check_email": {
            "get": {
                "description": "check user email",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "no"
                        }
                    }
                }
            }
        },
        "/v1/user/email/bind": {
            "post": {
                "description": "bind email according the code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "BindEmail",
                "parameters": [
                    {
                        "description": "email and code",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.EmailCode"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/app.UserDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "duplicate_creating"
                        }
                    }
                }
            }
        },
        "/v1/user/email/sendbind": {
            "post": {
                "description": "send code to user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "SendBindEmail",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/app.UserDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "duplicate_creating"
                        }
                    }
                }
            }
        },
        "/v1/user/follower/{account}": {
            "get": {
                "description": "list followers",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Follower"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "the account the followers belong to",
                        "name": "account",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.FollowsDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/user/following": {
            "post": {
                "description": "add a following",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Following"
                ],
                "parameters": [
                    {
                        "description": "body of creating following",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.followingCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_body"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "402": {
                        "description": "Payment Required",
                        "schema": {
                            "type": "not_allowed"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "resource_not_exists"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "duplicate_creating"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/user/following/{account}": {
            "get": {
                "description": "list followings",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Following"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "the account the followings belong to",
                        "name": "account",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.FollowsDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            },
            "delete": {
                "description": "remove a following",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Following"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "the account of following",
                        "name": "account",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "not_allowed"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/user/info": {
            "put": {
                "description": "update user info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "UpdateUserRegistrationInfo",
                "parameters": [
                    {
                        "description": "body of update user information",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.userCreateRequest"
                        }
                    }
                }
            }
        },
        "/v1/user/info/{account}": {
            "get": {
                "description": "get user apply info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "GetInfo",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.UserDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_body"
                        }
                    }
                }
            }
        },
        "/v1/user/like": {
            "post": {
                "description": "create a like",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Like"
                ],
                "parameters": [
                    {
                        "description": "body of creating like",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.likeCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_body"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "402": {
                        "description": "Payment Required",
                        "schema": {
                            "type": "not_allowed"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "resource_not_exists"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "duplicate_creating"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a like",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Like"
                ],
                "parameters": [
                    {
                        "description": "body of deleting like",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.likeDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_body"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "402": {
                        "description": "Payment Required",
                        "schema": {
                            "type": "not_allowed"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "resource_not_exists"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/user/like/{account}": {
            "get": {
                "description": "list likes",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Like"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "the account the likes belong to",
                        "name": "account",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.LikeDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/user/whitelist/{type}": {
            "get": {
                "description": "check user whitelist info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "CheckWhiteList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.WhitelistDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_body"
                        }
                    }
                }
            }
        },
        "/v1/user_points": {
            "get": {
                "description": "get user points details",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "UserPoints"
                ],
                "summary": "get user points details",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.UserPointsDetailsDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/user_points/taskdoc": {
            "get": {
                "description": "task doc",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "UserPoints"
                ],
                "summary": "task doc",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.TaskDocDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/user_points/tasks": {
            "get": {
                "description": "tasks of day",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "UserPoints"
                ],
                "summary": "tasks of day",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.TasksCompletionInfoDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/{account}/gitlab": {
            "get": {
                "description": "get code platform info of user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account",
                        "name": "account",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.platformInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "not_allowed"
                        }
                    }
                }
            }
        },
        "/{account}/gitlab/refresh": {
            "post": {
                "description": "refresh platform token of user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "account",
                        "name": "account",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "created"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "bad_request_param"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "not_allowed"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "app.AICCFinetuneSummaryDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_done": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "task": {
                    "type": "string"
                }
            }
        },
        "app.AIQuestionDTO": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "choices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.ChoiceQuestionDTO"
                    }
                },
                "completions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.CompletionQuestionDTO"
                    }
                },
                "times": {
                    "type": "integer"
                }
            }
        },
        "app.ActivityDTO": {
            "type": "object",
            "properties": {
                "resource": {
                    "$ref": "#/definitions/app.ResourceDTO"
                },
                "time": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "app.AgreementType": {
            "type": "string",
            "enum": [
                "course",
                "finetune",
                "user"
            ],
            "x-enum-varnames": [
                "Course",
                "Finetune",
                "User"
            ]
        },
        "app.ApiApplyRecordDTO": {
            "type": "object",
            "properties": {
                "apply_at": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "endpoint": {
                    "type": "string"
                },
                "model_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "update_at": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "app.ApiInfoDTO": {
            "type": "object",
            "properties": {
                "doc": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "app.AsgDTO": {
            "type": "object",
            "properties": {
                "asg_id": {
                    "type": "string"
                },
                "asg_name": {
                    "type": "string"
                },
                "course_name": {
                    "type": "string"
                },
                "deadline": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                }
            }
        },
        "app.AsgWorkDTO": {
            "type": "object",
            "properties": {
                "deadline": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "score": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "app.BaiChuanDTO": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                }
            }
        },
        "app.CertInfoDTO": {
            "type": "object",
            "properties": {
                "cert": {
                    "type": "string"
                },
                "is_pass": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                }
            }
        },
        "app.ChallengeCompetitorInfoDTO": {
            "type": "object",
            "properties": {
                "ai_question": {
                    "type": "object",
                    "properties": {
                        "in_progress": {
                            "type": "boolean"
                        },
                        "remaining_times": {
                            "type": "integer"
                        }
                    }
                },
                "is_competitor": {
                    "type": "boolean"
                },
                "score": {
                    "type": "integer"
                }
            }
        },
        "app.ChallengeRankingDTO": {
            "type": "object",
            "properties": {
                "competitor": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                }
            }
        },
        "app.ChoiceQuestionDTO": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "app.CloudDTO": {
            "type": "object",
            "properties": {
                "credit": {
                    "type": "integer"
                },
                "feature": {
                    "type": "string"
                },
                "has_holding": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_idle": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "processor": {
                    "type": "string"
                },
                "spec": {
                    "type": "string"
                }
            }
        },
        "app.CompetitionRankingDTO": {
            "type": "object",
            "properties": {
                "final": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opensourceways_xihe-server_competition_app.RankingDTO"
                    }
                },
                "preliminary": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opensourceways_xihe-server_competition_app.RankingDTO"
                    }
                }
            }
        },
        "app.CompletionQuestionDTO": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                }
            }
        },
        "app.CourseDTO": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "desc": {
                    "type": "string"
                },
                "doc": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "forum": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "hours": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "is_apply": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "poster": {
                    "type": "string"
                },
                "sections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.SectionDTO"
                    }
                },
                "status": {
                    "type": "string"
                },
                "teacher": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "app.CourseSummaryDTO": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "desc": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "hours": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "poster": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "app.DatasetDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "like_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "repo_id": {
                    "type": "string"
                },
                "repo_type": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "app.DatasetSummaryDTO": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "like_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "app.DomainTagsDTO": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Tags"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "app.FinetuneSummaryDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_done": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "app.FollowDTO": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "avatar_id": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "is_follower": {
                    "type": "boolean"
                }
            }
        },
        "app.FollowsDTO": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.FollowDTO"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "app.GlobalDatasetDTO": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "like_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "app.GlobalDatasetsDTO": {
            "type": "object",
            "properties": {
                "projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.GlobalDatasetDTO"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "app.GlobalModelDTO": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "like_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "app.GlobalModelsDTO": {
            "type": "object",
            "properties": {
                "projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.GlobalModelDTO"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "app.GlobalProjectDTO": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "cover_id": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "fork_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "level": {
                    "type": "string"
                },
                "like_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "app.GlobalProjectsDTO": {
            "type": "object",
            "properties": {
                "projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.GlobalProjectDTO"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "app.InferenceDTO": {
            "type": "object",
            "properties": {
                "access_url": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "inference_id": {
                    "type": "string"
                }
            }
        },
        "app.KeyValueDTO": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "app.LessonDTO": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.PointDTO"
                    }
                },
                "video": {
                    "type": "string"
                }
            }
        },
        "app.LikeDTO": {
            "type": "object",
            "properties": {
                "resource": {
                    "$ref": "#/definitions/app.ResourceDTO"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "app.LoginDTO": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "app.ModelDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "like_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "repo_id": {
                    "type": "string"
                },
                "repo_type": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "app.ModelSummaryDTO": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "like_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "app.PodInfoDTO": {
            "type": "object",
            "properties": {
                "access_url": {
                    "type": "string"
                },
                "cloud_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "expiry": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "app.PointDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "video": {
                    "type": "string"
                }
            }
        },
        "app.PointsDetailDTO": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "id": {
                    "description": "serial number",
                    "type": "string"
                },
                "points": {
                    "type": "integer"
                },
                "task": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "app.ProjectSummaryDTO": {
            "type": "object",
            "properties": {
                "cover_id": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "fork_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "level": {
                    "type": "string"
                },
                "like_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "app.ProjectSummuryDTO": {
            "type": "object",
            "properties": {
                "cover_id": {
                    "type": "string"
                },
                "create_at": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "fork_count": {
                    "type": "integer"
                },
                "like_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                }
            }
        },
        "app.PromotionDTO": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "intro": {
                    "type": "string"
                },
                "is_register": {
                    "type": "boolean"
                },
                "is_static": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "poster": {
                    "type": "string"
                },
                "registrants_num": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "way": {
                    "type": "string"
                }
            }
        },
        "app.PromotionsDTO": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.PromotionDTO"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "app.RelateProjectDTO": {
            "type": "object",
            "properties": {
                "related_project": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.ProjectSummuryDTO"
                    }
                }
            }
        },
        "app.RepoFileDownloadDTO": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "download_url": {
                    "type": "string"
                }
            }
        },
        "app.RepoPathItem": {
            "type": "object",
            "properties": {
                "is_dir": {
                    "type": "boolean"
                },
                "is_lfs_file": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "app.ResourceDTO": {
            "type": "object",
            "properties": {
                "cover_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "fork_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "level": {
                    "type": "string"
                },
                "like_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "object",
                    "properties": {
                        "avatar_id": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "update_at": {
                    "type": "string"
                }
            }
        },
        "app.ResourceSearchDTO": {
            "type": "object",
            "properties": {
                "top": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.ResourceSummaryDTO"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "app.ResourceSummaryDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                }
            }
        },
        "app.SearchDTO": {
            "type": "object",
            "properties": {
                "dataset": {
                    "$ref": "#/definitions/app.ResourceSearchDTO"
                },
                "model": {
                    "$ref": "#/definitions/app.ResourceSearchDTO"
                },
                "project": {
                    "$ref": "#/definitions/app.ResourceSearchDTO"
                },
                "user": {
                    "$ref": "#/definitions/app.UserSearchDTO"
                }
            }
        },
        "app.SectionDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "lessons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.LessonDTO"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "app.TaskCompletionInfoDTO": {
            "type": "object",
            "properties": {
                "addr": {
                    "type": "string"
                },
                "completed": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "points": {
                    "type": "integer"
                }
            }
        },
        "app.TaskDocDTO": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "app.TasksCompletionInfoDTO": {
            "type": "object",
            "properties": {
                "kind": {
                    "type": "string"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.TaskCompletionInfoDTO"
                    }
                }
            }
        },
        "app.TrainingConfigDTO": {
            "type": "object",
            "properties": {
                "boot_file": {
                    "type": "string"
                },
                "code_dir": {
                    "type": "string"
                },
                "compute": {
                    "$ref": "#/definitions/github_com_opensourceways_xihe-server_app.ComputeDTO"
                },
                "desc": {
                    "type": "string"
                },
                "enable_aim": {
                    "type": "boolean"
                },
                "enable_output": {
                    "type": "boolean"
                },
                "env": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.KeyValueDTO"
                    }
                },
                "hyperparameter": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.KeyValueDTO"
                    }
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.TrainingRefDTO"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "app.TrainingRefDTO": {
            "type": "object",
            "properties": {
                "File": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "app.TrainingSummaryDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_done": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "app.UploadDataDTO": {
            "type": "object",
            "properties": {
                "file_name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "upload_at": {
                    "type": "integer"
                }
            }
        },
        "app.UserDTO": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "avatar_id": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "course_agreement": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "finetune_agreement": {
                    "type": "string"
                },
                "follower_count": {
                    "type": "integer"
                },
                "following_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "user_agreement": {
                    "type": "string"
                }
            }
        },
        "app.UserFinetunesDTO": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.FinetuneSummaryDTO"
                    }
                },
                "expiry": {
                    "type": "integer"
                }
            }
        },
        "app.UserPointsDetailsDTO": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.PointsDetailDTO"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "app.UserRegisterInfoDTO": {
            "type": "object",
            "properties": {
                "account": {},
                "city": {},
                "detail": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "email": {},
                "identity": {},
                "name": {},
                "phone": {},
                "province": {},
                "version": {
                    "type": "integer"
                }
            }
        },
        "app.UserSearchDTO": {
            "type": "object",
            "properties": {
                "top": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "app.WhitelistDTO": {
            "type": "object",
            "properties": {
                "allowed": {
                    "type": "boolean"
                }
            }
        },
        "app.WuKongRankDTO": {
            "type": "object",
            "properties": {
                "rank": {
                    "type": "integer"
                }
            }
        },
        "controller.AICCKeyValue": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "controller.AddCourseRelatedProjectRequest": {
            "type": "object",
            "properties": {
                "owner": {
                    "type": "string"
                },
                "project_name": {
                    "type": "string"
                }
            }
        },
        "controller.AddRelatedProjectRequest": {
            "type": "object",
            "properties": {
                "owner": {
                    "type": "string"
                },
                "project_name": {
                    "type": "string"
                }
            }
        },
        "controller.ChangeTeamNameRequest": {
            "type": "object",
            "properties": {
                "team_name": {
                    "type": "string"
                }
            }
        },
        "controller.CompetitorApplyRequest": {
            "type": "object",
            "properties": {
                "agreement": {
                    "type": "boolean"
                },
                "city": {
                    "type": "string"
                },
                "detail": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "email": {
                    "type": "string"
                },
                "identity": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                }
            }
        },
        "controller.Compute": {
            "type": "object",
            "properties": {
                "flavor": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "controller.CreateTeamRequest": {
            "type": "object",
            "properties": {
                "team_name": {
                    "type": "string"
                }
            }
        },
        "controller.DeleteMemberRequest": {
            "type": "object",
            "properties": {
                "competitor_account": {
                    "type": "string"
                }
            }
        },
        "controller.EmailCode": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "controller.FinetuneCreateRequest": {
            "type": "object",
            "properties": {
                "hyperparameter": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.KeyValue"
                    }
                },
                "model": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "task": {
                    "type": "string"
                }
            }
        },
        "controller.JoinTeamRequest": {
            "type": "object",
            "properties": {
                "leader_account": {
                    "type": "string"
                }
            }
        },
        "controller.KeyValue": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "controller.PlayRecordRequest": {
            "type": "object",
            "properties": {
                "finish_count": {
                    "type": "integer"
                },
                "lesson_id": {
                    "type": "string"
                },
                "play_count": {
                    "type": "integer"
                },
                "point_id": {
                    "type": "string"
                },
                "section_id": {
                    "type": "string"
                }
            }
        },
        "controller.PromotionApplyReq": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "detail": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "email": {
                    "type": "string"
                },
                "identity": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                }
            }
        },
        "controller.RepoFileCreateRequest": {
            "type": "object",
            "properties": {
                "base64_encoded": {
                    "type": "boolean"
                },
                "content": {
                    "type": "string"
                }
            }
        },
        "controller.RepoFileUpdateRequest": {
            "type": "object",
            "properties": {
                "base64_encoded": {
                    "type": "boolean"
                },
                "content": {
                    "type": "string"
                }
            }
        },
        "controller.StudentApplyRequest": {
            "type": "object",
            "properties": {
                "agreement": {
                    "type": "boolean"
                },
                "city": {
                    "type": "string"
                },
                "detail": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "email": {
                    "type": "string"
                },
                "identity": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                }
            }
        },
        "controller.TrainingCreateRequest": {
            "type": "object",
            "properties": {
                "boot_file": {
                    "type": "string"
                },
                "code_dir": {
                    "type": "string"
                },
                "compute": {
                    "$ref": "#/definitions/controller.Compute"
                },
                "datasets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.TrainingRef"
                    }
                },
                "desc": {
                    "type": "string"
                },
                "enable_aim": {
                    "type": "boolean"
                },
                "enable_output": {
                    "type": "boolean"
                },
                "env": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.KeyValue"
                    }
                },
                "hyperparameter": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.KeyValue"
                    }
                },
                "models": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.TrainingRef"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "controller.TrainingRef": {
            "type": "object",
            "properties": {
                "File": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                }
            }
        },
        "controller.TransferLeaderRequest": {
            "type": "object",
            "properties": {
                "competitor_account": {
                    "type": "string"
                }
            }
        },
        "controller.UserAgreement": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/definitions/app.AgreementType"
                }
            }
        },
        "controller.UserBasicInfoUpdateRequest": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                }
            }
        },
        "controller.UserInfoUpdateRequest": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "detail": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "email": {
                    "type": "string"
                },
                "identity": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                }
            }
        },
        "controller.aiDetectorReq": {
            "type": "object",
            "properties": {
                "lang": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "controller.aiDetectorResp": {
            "type": "object",
            "properties": {
                "is_machine": {
                    "type": "boolean"
                }
            }
        },
        "controller.aiQuestionAnswerSubmitRequest": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "times": {
                    "type": "integer"
                }
            }
        },
        "controller.aiQuestionAnswerSubmitResp": {
            "type": "object",
            "properties": {
                "score": {
                    "type": "integer"
                }
            }
        },
        "controller.aiccFinetuneCreateRequest": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "env": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.AICCKeyValue"
                    }
                },
                "hyperparameter": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.AICCKeyValue"
                    }
                },
                "name": {
                    "type": "string"
                },
                "task": {
                    "type": "string"
                }
            }
        },
        "controller.aiccFinetuneCreateResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "controller.aiccFinetuneDetail": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_done": {
                    "type": "boolean"
                },
                "log": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "controller.aiccFinetuneLogResp": {
            "type": "object",
            "properties": {
                "log_url": {
                    "type": "string"
                }
            }
        },
        "controller.applyApiReq": {
            "type": "object",
            "properties": {
                "agreement": {
                    "type": "boolean"
                },
                "city": {
                    "type": "string"
                },
                "detail": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "email": {
                    "type": "string"
                },
                "identity": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                }
            }
        },
        "controller.baichuanReq": {
            "type": "object",
            "properties": {
                "repetition_penalty": {
                    "type": "number"
                },
                "sampling": {
                    "type": "boolean"
                },
                "temperature": {
                    "type": "number"
                },
                "text": {
                    "type": "string"
                },
                "top_k": {
                    "type": "integer"
                },
                "top_p": {
                    "type": "number"
                }
            }
        },
        "controller.canApplyResourceNameResp": {
            "type": "object",
            "properties": {
                "can_apply": {
                    "type": "boolean"
                }
            }
        },
        "controller.cloudSubscribeRequest": {
            "type": "object",
            "required": [
                "image"
            ],
            "properties": {
                "cloud_id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            }
        },
        "controller.competitorApplyRequest": {
            "type": "object",
            "properties": {
                "agreement": {
                    "type": "boolean"
                },
                "city": {
                    "type": "string"
                },
                "detail": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "email": {
                    "type": "string"
                },
                "identity": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                }
            }
        },
        "controller.datasetCreateRequest": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "repo_type": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "controller.datasetDetail": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "like_count": {
                    "type": "integer"
                },
                "liked": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "related_models": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.ResourceDTO"
                    }
                },
                "related_projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.ResourceDTO"
                    }
                },
                "repo_id": {
                    "type": "string"
                },
                "repo_type": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "controller.datasetUpdateRequest": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "controller.datasetsInfo": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "datasets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.DatasetSummaryDTO"
                    }
                },
                "owner": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "controller.finetuneCreateResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "controller.finetuneLog": {
            "type": "object",
            "properties": {
                "log": {
                    "type": "string"
                }
            }
        },
        "controller.followingCreateRequest": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                }
            }
        },
        "controller.glm2Request": {
            "type": "object",
            "properties": {
                "history": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "repetition_penalty": {
                    "type": "number"
                },
                "sampling": {
                    "type": "boolean"
                },
                "temperature": {
                    "type": "number"
                },
                "text": {
                    "type": "string"
                },
                "top_k": {
                    "type": "integer"
                },
                "top_p": {
                    "type": "number"
                }
            }
        },
        "controller.homeElectricityInfo": {
            "type": "object",
            "properties": {
                "comp": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opensourceways_xihe-server_competition_app.CompetitionSummaryDTO"
                    }
                },
                "course": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.CourseSummaryDTO"
                    }
                },
                "dataset": {
                    "$ref": "#/definitions/app.GlobalDatasetsDTO"
                },
                "model": {
                    "$ref": "#/definitions/app.GlobalModelsDTO"
                },
                "project": {
                    "$ref": "#/definitions/app.GlobalProjectsDTO"
                }
            }
        },
        "controller.homeInfo": {
            "type": "object",
            "properties": {
                "comp": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opensourceways_xihe-server_competition_app.CompetitionSummaryDTO"
                    }
                },
                "course": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.CourseSummaryDTO"
                    }
                }
            }
        },
        "controller.iflyteksparkRequest": {
            "type": "object",
            "properties": {
                "repetition_penalty": {
                    "type": "number"
                },
                "sampling": {
                    "type": "boolean"
                },
                "temperature": {
                    "type": "number"
                },
                "text": {
                    "type": "string"
                },
                "top_k": {
                    "type": "integer"
                }
            }
        },
        "controller.isApplyResp": {
            "type": "object",
            "properties": {
                "is_apply": {
                    "type": "boolean"
                }
            }
        },
        "controller.likeCreateRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string"
                }
            }
        },
        "controller.likeDeleteRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string"
                }
            }
        },
        "controller.llama2Request": {
            "type": "object",
            "properties": {
                "history": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "repetition_penalty": {
                    "type": "number"
                },
                "sampling": {
                    "type": "boolean"
                },
                "temperature": {
                    "type": "number"
                },
                "text": {
                    "type": "string"
                },
                "top_k": {
                    "type": "integer"
                },
                "top_p": {
                    "type": "number"
                }
            }
        },
        "controller.luojiaResp": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                }
            }
        },
        "controller.modelCreateRequest": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "repo_type": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "controller.modelDetail": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "like_count": {
                    "type": "integer"
                },
                "liked": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "related_datasets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.ResourceDTO"
                    }
                },
                "related_projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.ResourceDTO"
                    }
                },
                "repo_id": {
                    "type": "string"
                },
                "repo_type": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "controller.modelUpdateRequest": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "controller.modelsInfo": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "models": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.ModelSummaryDTO"
                    }
                },
                "owner": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "controller.newApiTokenResp": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "controller.pictureUploadResp": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string"
                }
            }
        },
        "controller.platformInfo": {
            "type": "object",
            "properties": {
                "create_at": {
                    "type": "integer"
                }
            }
        },
        "controller.projectCreateRequest": {
            "type": "object",
            "properties": {
                "cover_id": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "repo_type": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "training": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "controller.projectDetail": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "cover_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "fork_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "like_count": {
                    "type": "integer"
                },
                "liked": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "related_datasets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.ResourceDTO"
                    }
                },
                "related_models": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.ResourceDTO"
                    }
                },
                "repo_id": {
                    "type": "string"
                },
                "repo_type": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "training": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "controller.projectForkRequest": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "controller.projectUpdateRequest": {
            "type": "object",
            "properties": {
                "cover_id": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "controller.projectsInfo": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.ProjectSummaryDTO"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "controller.relatedResourceAddRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                }
            }
        },
        "controller.relatedResourceRemoveRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                }
            }
        },
        "controller.resourceTagsUpdateRequest": {
            "type": "object",
            "properties": {
                "add": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "remove": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "controller.responseData": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {},
                "msg": {
                    "type": "string"
                }
            }
        },
        "controller.skyWorkRequest": {
            "type": "object",
            "properties": {
                "history": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "repetition_penalty": {
                    "type": "number"
                },
                "sampling": {
                    "type": "boolean"
                },
                "temperature": {
                    "type": "number"
                },
                "text": {
                    "type": "string"
                },
                "top_k": {
                    "type": "integer"
                },
                "top_p": {
                    "type": "number"
                }
            }
        },
        "controller.trainingCreateResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "controller.trainingDetail": {
            "type": "object",
            "properties": {
                "aim_path": {
                    "type": "string"
                },
                "compute": {
                    "$ref": "#/definitions/github_com_opensourceways_xihe-server_app.ComputeDTO"
                },
                "created_at": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "enable_aim": {
                    "type": "boolean"
                },
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_done": {
                    "type": "boolean"
                },
                "log": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "controller.trainingLogResp": {
            "type": "object",
            "properties": {
                "log_url": {
                    "type": "string"
                }
            }
        },
        "controller.userDetail": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "avatar_id": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "course_agreement": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "finetune_agreement": {
                    "type": "string"
                },
                "follower_count": {
                    "type": "integer"
                },
                "following_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "is_follower": {
                    "type": "boolean"
                },
                "points": {
                    "type": "integer"
                },
                "user_agreement": {
                    "type": "string"
                }
            }
        },
        "controller.wukongAddLikeResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "controller.wukongAddPublicResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "controller.wukongCancelDiggPublicRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "controller.wukongDiggResp": {
            "type": "object",
            "properties": {
                "digg_count": {
                    "type": "integer"
                }
            }
        },
        "controller.wukongPictureLink": {
            "type": "object",
            "properties": {
                "link": {
                    "type": "string"
                }
            }
        },
        "controller.wukongPicturesGenerateResp": {
            "type": "object",
            "properties": {
                "pictures": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "controller.wukongRequest": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "img_quantity": {
                    "type": "integer"
                },
                "style": {
                    "type": "string"
                }
            }
        },
        "domain.Tags": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "github_com_opensourceways_xihe-server_app.ComputeDTO": {
            "type": "object",
            "properties": {
                "flavor": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "github_com_opensourceways_xihe-server_bigmodel_app.LuoJiaRecordDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "github_com_opensourceways_xihe-server_bigmodel_app.WuKongLikeDTO": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_public": {
                    "type": "boolean"
                },
                "link": {
                    "type": "string"
                },
                "owner": {
                    "description": "owner of picture",
                    "type": "string"
                },
                "style": {
                    "type": "string"
                }
            }
        },
        "github_com_opensourceways_xihe-server_bigmodel_app.WuKongPublicDTO": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "digg_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "is_digg": {
                    "type": "boolean"
                },
                "is_like": {
                    "type": "boolean"
                },
                "like_id": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "owner": {
                    "description": "owner of picture",
                    "type": "string"
                },
                "style": {
                    "type": "string"
                }
            }
        },
        "github_com_opensourceways_xihe-server_competition_app.CompetitionSubmissionDTO": {
            "type": "object",
            "properties": {
                "file_name": {
                    "type": "string"
                },
                "score": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "submit_at": {
                    "type": "string"
                }
            }
        },
        "github_com_opensourceways_xihe-server_competition_app.CompetitionSubmissionsDTO": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opensourceways_xihe-server_competition_app.CompetitionSubmissionDTO"
                    }
                },
                "project": {
                    "type": "string"
                }
            }
        },
        "github_com_opensourceways_xihe-server_competition_app.CompetitionSummaryDTO": {
            "type": "object",
            "properties": {
                "bonus": {
                    "type": "integer"
                },
                "count": {
                    "type": "integer"
                },
                "desc": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lang": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "poster": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_opensourceways_xihe-server_competition_app.CompetitionTeamDTO": {
            "type": "object",
            "properties": {
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_opensourceways_xihe-server_competition_app.CompetitionTeamMemberDTO"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_opensourceways_xihe-server_competition_app.CompetitionTeamMemberDTO": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "github_com_opensourceways_xihe-server_competition_app.RankingDTO": {
            "type": "object",
            "properties": {
                "score": {
                    "type": "number"
                },
                "submit_at": {
                    "type": "string"
                },
                "team_name": {
                    "type": "string"
                }
            }
        },
        "github_com_opensourceways_xihe-server_competition_app.UserCompetitionDTO": {
            "type": "object",
            "properties": {
                "bonus": {
                    "type": "integer"
                },
                "count": {
                    "type": "integer"
                },
                "dataset_doc": {
                    "type": "string"
                },
                "dataset_url": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "doc": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "forum": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_competitor": {
                    "type": "boolean"
                },
                "is_finalist": {
                    "type": "boolean"
                },
                "lang": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phase": {
                    "type": "string"
                },
                "poster": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "team_id": {
                    "type": "string"
                },
                "team_role": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "winners": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
